enum TaxonomyTermType {
  blog
  curriculum
  curriculumTopic
  curriculumTopicFolder
  forum
  forumCategory
  locale
  root
  subject
  topic
  topicFolder
}

type TaxonomyTerm implements AbstractUuid & AbstractNavigationChild & InstanceAware & ThreadAware {
  id: Int!
  trashed: Boolean!
  threads(
    after: String
    before: String
    first: Int
    last: Int
    archived: Boolean
    trashed: Boolean
  ): ThreadsConnection!
  events(
    after: String
    before: String
    first: Int
    last: Int
    instance: Instance
    actorId: Int
  ): AbstractNotificationEventConnection!
  type: TaxonomyTermType!
  instance: Instance!
  alias: String
  name: String!
  description: String
  weight: Int!
  parent: TaxonomyTerm
  taxonomyId: Int!
  children(
    after: String
    before: String
    first: Int
    last: Int
  ): AbstractUuidConnection!
  navigation: Navigation
}

extend type Mutation {
  taxonomyTerm: TaxonomyTermMutation!
}

type TaxonomyTermMutation {
  setNameAndDescription(
    input: TaxonomyTermSetNameAndDescriptionInput!
  ): TaxonomyTermSetNameAndDescriptionResponse!
  move(input: TaxonomyTermMoveInput!): TaxonomyTermMoveResponse!
}

input TaxonomyTermSetNameAndDescriptionInput {
  id: Int!
  name: String!
  description: String
}

type TaxonomyTermSetNameAndDescriptionResponse {
  success: Boolean!
  query: Query!
}

input TaxonomyTermMoveInput {
  childrenIds: [Int!]!
  destination: Int!
}

type TaxonomyTermMoveResponse {
  success: Boolean!
  query: Query!
}