type CoursePage implements AbstractUuid & AbstractRepository & AbstractEntity & InstanceAware & ThreadAware {
  id: Int!
  trashed: Boolean!
  threads(
    after: String
    before: String
    first: Int
    last: Int
    archived: Boolean
    trashed: Boolean
  ): ThreadsConnection!
  instance: Instance!
  alias: String
  date: DateTime!
  license: License!
  currentRevision: CoursePageRevision
  revisions(
    after: String
    before: String
    first: Int
    last: Int
    unrevised: Boolean
  ): CoursePageRevisionConnection!
  course: Course!
}

type CoursePageRevision implements AbstractUuid & AbstractRevision & AbstractEntityRevision & ThreadAware {
  id: Int!
  author: User!
  trashed: Boolean!
  alias: String
  threads(
    after: String
    before: String
    first: Int
    last: Int
    archived: Boolean
    trashed: Boolean
  ): ThreadsConnection!
  date: DateTime!
  repository: CoursePage!
  title: String!
  content: String!
  changes: String!
}

type CoursePageRevisionConnection {
  edges: [CoursePageRevisionCursor!]!
  nodes: [CoursePageRevision!]!
  totalCount: Int!
  pageInfo: PageInfo!
}

type CoursePageRevisionCursor {
  cursor: String!
  node: CoursePageRevision!
}
